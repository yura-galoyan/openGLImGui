cmake_minimum_required(VERSION 3.14)

project(MyProject)

set(IMGUI_PATH dependencies/imgui)
set(GLFW_INCLUDE dependencies/glfw/include)
set(GLFW_LIB dependencies/glfw/lib)

# Compile GLFW as a static library
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_INSTALL OFF CACHE BOOL "" FORCE)

include_directories(${GLFW_INCLUDE})
include_directories(${IMGUI_PATH})
include_directories(${IMGUI_PATH}/backends)
include_directories(dependencies/KHR)
include_directories(dependencies)

# Specify the path to libglfw3.a
set(GLFW_LIBRARY_PATH ${GLFW_LIB}/libglfw3.a)


set(SOURCES
glLoader.cpp
glDrawer.cpp
)


# Create executable target for main.cpp
add_executable(App main.cpp ${IMGUI_SRC} ${SOURCES})

# Specify glfw static lib directory
target_link_directories(App PRIVATE dependencies/glfw/lib)
target_link_directories(App PRIVATE dependencies/build)

set(static_libraries "-l:libglfw3.a" "-l:libimgui.a" "-l:libglad.a" )


# Find OpenGL library in System
find_package(OpenGL REQUIRED)

# Link App with GLFW and OpenGL libraries
target_link_libraries(App PRIVATE ${static_libraries} OpenGL::GL)
